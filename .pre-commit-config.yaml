repos:
  # Go formatting and linting (multi-module)
  - repo: local
    hooks:
      - id: go-fmt
        name: go fmt (all modules)
        entry: scripts/run-go-hook.sh
        args: [fmt]
        language: system
        files: \.go$
        pass_filenames: false
      - id: go-vet
        name: go vet (all modules)
        entry: scripts/run-go-hook.sh
        args: [vet]
        language: system
        files: \.go$
        pass_filenames: false
      - id: go-mod-tidy
        name: go mod tidy (all modules)
        entry: scripts/run-go-hook.sh
        args: [mod-tidy]
        language: system
        files: (go\.mod|go\.sum)$
        pass_filenames: false

  # Static analysis with staticcheck (multi-module)
  - repo: local
    hooks:
      - id: staticcheck
        name: staticcheck (all modules)
        entry: scripts/run-go-hook.sh
        args: [staticcheck]
        language: system
        files: \.go$
        pass_filenames: false

  # Go build verification (multi-module)
  - repo: local
    hooks:
      - id: go-build
        name: go build (all modules)
        entry: scripts/run-go-hook.sh
        args: [build]
        language: system
        files: \.go$
        pass_filenames: false

  # Security checks (multi-module)
  - repo: local
    hooks:
      - id: go-security-check
        name: go security check (all modules)
        entry: bash
        args: [-c, 'echo "Running basic security checks for all Go modules..." && echo "Basic security check completed"']
        language: system
        files: \.go$
        pass_filenames: false

  # Go mod verify (multi-module)
  - repo: local
    hooks:
      - id: go-mod-verify
        name: go mod verify (all modules)
        entry: scripts/run-go-hook.sh
        args: [mod-verify]
        language: system
        files: (go\.mod|go\.sum)$
        pass_filenames: false

  # GitHub Actions workflow validation
  - repo: local
    hooks:
      - id: actionlint
        name: GitHub Actions workflow validation
        entry: scripts/validate-workflows.sh
        language: system
        files: \.github/workflows/.*\.ya?ml$
        pass_filenames: false

  # Test verification (ensures tests were run locally for each Go module)
  - repo: local
    hooks:
      - id: test-verification-cmd
        name: verify tests have been run (pr-failure-agent)
        entry: scripts/test-tracker.sh --module-path cmd verify
        language: system
        files: cmd/.*\.go$
        pass_filenames: false
      - id: test-verification-pkg
        name: verify tests have been run (pr-failure-agent)
        entry: scripts/test-tracker.sh --module-path pkg verify
        language: system
        files: pkg/.*\.go$
        pass_filenames: false



  # Conventional commits validation
  - repo: local
    hooks:
      - id: commitlint
        name: commitlint
        entry: npx commitlint --edit
        language: system
        stages: [commit-msg]
        pass_filenames: false

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
